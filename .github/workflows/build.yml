name: Build

on:
    push:
        tags: ['**']

jobs:
    build:
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout deno_snapshot_builder
              uses: actions/checkout@v4

            - name: Install rust
              uses: dsherret/rust-toolchain-file@v1

            - name: Install ndk
              id: install-ndk
              uses: nttld/setup-ndk@v1
              with:
                  ndk-version: r26d
                  add-to-path: false

            - name: Install cross compilation toolchain
              run: |
                  rustup target add aarch64-linux-android

            - name: Install qemu
              uses: docker/setup-qemu-action@v3
              with:
                  platforms: arm64

            - name: Setup qemu
              run: |
                  docker run --rm --privileged aptman/qus -s -- -p aarch64 arm

            - name: Install protobuf
              run: |
                  sudo apt update
                  sudo apt install -yq --no-install-suggests --no-install-recommends \
                    protobuf-compiler

            - name: Build builder
              env:
                  ANDROID_NDK_ROOT: ${{ steps.install-ndk.outputs.ndk-path }}
                  CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER: ${{ steps.install-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android28-clang
                  CC_aarch64_linux_android: ${{ steps.install-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android28-clang
                  AR_aarch64_linux_android: ${{ steps.install-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
                  RUSTY_V8_MIRROR: https://github.com/AuTsing/rusty_v8_builder/releases/download
              run: |
                  cargo build --target aarch64-linux-android --release

            - name: Build snapshot
              run: |
                  docker run --rm --privileged --entrypoint /entrypoint_root.sh termux/termux-docker:aarch64 \
                    --mount type=bind,src=$(pwd),target=$(pwd) \
                    bash -c "$(pwd)/target/aarch64-linux-android/release/deno_snapshot_builder"
