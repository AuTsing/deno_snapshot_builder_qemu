name: Build

on:
    push:
        branches:
            - dev
        tags:
            - v*

jobs:
    build:
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout deno_snapshot_builder
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref_name }}

            - name: Checkout deno
              uses: actions/checkout@v4
              with:
                  repository: denoland/deno
                  ref: ${{ github.ref_name }}
                  path: assets/deno

            - name: Install rust
              uses: dsherret/rust-toolchain-file@v1

            - name: Install ndk
              id: install-ndk
              uses: nttld/setup-ndk@v1
              with:
                  ndk-version: r26d
                  add-to-path: false

            - name: Install cross compilation toolchain
              run: |
                  rustup target add aarch64-linux-android

            - name: Install qemu
              uses: docker/setup-qemu-action@v3
              with:
                  platforms: arm64

            - name: Setup qemu
              run: |
                  docker run --rm --privileged aptman/qus -s -- -p aarch64 arm

            - name: Install protobuf
              run: |
                  sudo apt update
                  sudo apt install -yq --no-install-suggests --no-install-recommends \
                    protobuf-compiler

            - name: Patch src
              run: |
                  git apply ${{ github.workspace }}/patches/ext_webgpu_byow.rs.patch

            - name: Cache rust
              uses: Swatinem/rust-cache@v2

            - name: Build builder
              env:
                  ANDROID_NDK_ROOT: ${{ steps.install-ndk.outputs.ndk-path }}
                  CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER: ${{ steps.install-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android28-clang
                  CC_aarch64_linux_android: ${{ steps.install-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android28-clang
                  AR_aarch64_linux_android: ${{ steps.install-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
              run: |
                  cargo build --target aarch64-linux-android --release

            - name: Build snapshot
              run: |
                  rm -r ${{ github.workspace }}/src/*
                  cp -r ${{ github.workspace }}/assets/deno/cli ${{ github.workspace }}/src/deno_builder
                  docker run --rm --privileged \
                    --entrypoint /entrypoint_root.sh \
                    --mount type=bind,src=$HOME,target=$HOME \
                    termux/termux-docker:aarch64 \
                    bash -c "cd ${{ github.workspace }} && ${{ github.workspace }}/target/aarch64-linux-android/release/deno_snapshot_builder"

            - name: Release
              uses: softprops/action-gh-release@v2
              with:
                  files: |
                      ${{ github.workspace }}/out/COMPILER_SNAPSHOT.bin
                      ${{ github.workspace }}/out/CLI_SNAPSHOT.bin
